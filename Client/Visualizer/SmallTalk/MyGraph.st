Object subclass: #Graph	instanceVariableNames: 'nodes edges'	classVariableNames: ''	package: 'MyGraph'!!Graph methodsFor: 'as yet unclassified' stamp: 'GageBenham 11/14/2023 23:59'!edgeById: anId    ^ edges at: anId ifAbsent: [nil].! !!Graph methodsFor: 'as yet unclassified' stamp: 'GageBenham 11/14/2023 23:59'!addEdge: anEdge    edges at: anEdge id put: anEdge.! !!Graph methodsFor: 'as yet unclassified' stamp: 'GageBenham 11/14/2023 23:59'!edges    ^ edges values! !!Graph methodsFor: 'as yet unclassified' stamp: 'GageBenham 11/14/2023 23:59'!nodes    ^ nodes values! !!Graph methodsFor: 'as yet unclassified' stamp: 'GageBenham 11/14/2023 23:59'!nodeById: anId    ^ nodes at: anId ifAbsent: [nil].! !!Graph methodsFor: 'initialization' stamp: 'GageBenham 11/14/2023 23:58'!addNode: aNode    nodes at: aNode id put: aNode.! !!Graph methodsFor: 'initialization' stamp: 'GageBenham 11/14/2023 23:58'!initialize    super initialize.    nodes := Dictionary new.    edges := Dictionary new.! !Object subclass: #GraphEdge	instanceVariableNames: 'id from to length'	classVariableNames: ''	package: 'MyGraph'!!GraphEdge methodsFor: 'initialization' stamp: 'GageBenham 11/15/2023 00:00'!initialize    super initialize.    length := 0! !!GraphEdge methodsFor: 'initialization' stamp: 'GageBenham 11/15/2023 00:00'!id: anId    id := anId.! !!GraphEdge methodsFor: 'accessing' stamp: 'GageBenham 11/15/2023 00:01'!to    ^ to! !!GraphEdge methodsFor: 'accessing' stamp: 'GageBenham 11/15/2023 00:01'!from    ^ from! !!GraphEdge methodsFor: 'accessing' stamp: 'GageBenham 11/15/2023 00:01'!from: aNode    from := aNode.! !!GraphEdge methodsFor: 'accessing' stamp: 'GageBenham 11/15/2023 00:01'!length: aLength    length := aLength.! !!GraphEdge methodsFor: 'accessing' stamp: 'GageBenham 11/15/2023 00:02'!length    ^ length! !!GraphEdge methodsFor: 'accessing' stamp: 'GageBenham 11/15/2023 00:01'!to: aNode    to := aNode.! !!GraphEdge methodsFor: 'accessing' stamp: 'GageBenham 11/15/2023 00:01'!id    ^ id! !Object subclass: #GraphNode	instanceVariableNames: 'id value'	classVariableNames: ''	package: 'MyGraph'!!GraphNode methodsFor: 'initialization' stamp: 'GageBenham 11/15/2023 00:02'!initialize    super initialize.    value := 0.! !!GraphNode methodsFor: 'initialization' stamp: 'GageBenham 11/15/2023 00:02'!id: anId    id := anId.! !!GraphNode methodsFor: 'accessing' stamp: 'GageBenham 11/15/2023 00:03'!value    ^ value! !!GraphNode methodsFor: 'accessing' stamp: 'GageBenham 11/15/2023 00:03'!id    ^ id! !!GraphNode methodsFor: 'accessing' stamp: 'GageBenham 11/15/2023 00:02'!value: aValue    value := aValue.! !